service: seedling-hq-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 30
  
  # Environment variables
  environment:
    NODE_ENV: ${self:custom.stages.${self:provider.stage}.NODE_ENV, 'production'}
    STAGE: ${self:provider.stage}
    API_VERSION: ${self:custom.apiVersion}
    
  # IAM role statements (add as needed)
  iam:
    role:
      statements:
        # Example: DynamoDB permissions
        # - Effect: Allow
        #   Action:
        #     - dynamodb:GetItem
        #     - dynamodb:PutItem
        #     - dynamodb:UpdateItem
        #     - dynamodb:DeleteItem
        #     - dynamodb:Query
        #     - dynamodb:Scan
        #   Resource: 
        #     - "arn:aws:dynamodb:${self:provider.region}:*:table/seedling-*"
        
  # API Gateway configuration
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses over 1KB
    shouldStartNameWithService: true
    
  # CloudWatch Logs
  logs:
    restApi: true
    
custom:
  apiVersion: '1.0.0'
  
  # Stage-specific configuration
  stages:
    dev:
      NODE_ENV: development
    staging:
      NODE_ENV: production
    prod:
      NODE_ENV: production
      
  # Serverless plugins configuration
  serverless-offline:
    httpPort: 3001
    host: 0.0.0.0
    stage: ${self:provider.stage}
    
functions:
  api:
    handler: dist/lambda.handler
    description: Seedling HQ API - Fastify serverless application
    events:
      - http:
          method: ANY
          path: /
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
      - http:
          method: ANY
          path: '{proxy+}'
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

# CloudFormation resources (add as needed)
resources:
  Resources:
    # Example: DynamoDB table
    # UsersTable:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     TableName: seedling-users-${self:provider.stage}
    #     AttributeDefinitions:
    #       - AttributeName: id
    #         AttributeType: S
    #     KeySchema:
    #       - AttributeName: id
    #         KeyType: HASH
    #     BillingMode: PAY_PER_REQUEST
    #     
    # API Gateway domain configuration (optional)
    # ApiGatewayDomainName:
    #   Type: AWS::ApiGateway::DomainName
    #   Properties:
    #     DomainName: ${self:custom.domainName}
    #     SecurityPolicy: TLS_1_2
    #     EndpointConfiguration:
    #       Types:
    #         - EDGE
    #     CertificateArn: ${self:custom.certificateArn}

plugins:
  - serverless-plugin-typescript
  - serverless-offline

# Package configuration
package:
  individually: false
  patterns:
    - '!src/**'
    - '!tests/**'
    - '!*.md'
    - '!.git/**'
    - '!.vscode/**'
    - '!node_modules/.cache/**'
    - 'dist/**'
